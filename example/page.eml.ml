let message (category, text) =
  <p class="flash-<%s category %>">
    <%s category %>: <%s text %>
  </p>

let chrome req content =
  <html>
    <link rel="stylesheet" href="/public/app.css" />
    <script src="/public/app.js"></script>
    <body>
      <div id="messages">
        <%s! Dream.flash_messages req
          |> List.map message
          |> String.concat "\n"
        %>
      </div>
      <div><%s! content %></div>
    </body>
  </html>

let content_anonymous req =
  <div id="login">
    <form class="with-password" action="/auth/login" method="POST">
      <%s! Dream.csrf_tag req %>
      <h3 id="title">Login</h3>
      <label for="login-username">Username</label>
      <input type="text" name="username" id="login-username" /></label>
      <label for="login-password">Password</label>
      <input type="password" name="password" id="login-password" />
      <button type="submit">Login</button>
    </form>
    <form class="with-email" action="/auth/login-with-email" method="POST">
      <%s! Dream.csrf_tag req %>
      <h3 id="title">Login with email</h3>
      <label for="login-email-username">Username</label>
      <input id="login-email-username" type="text" name="username" />
      <button type="submit">Login with email</button>
      <p>
        Login with email is only available for users with confirmed email
        address.
      </p>
    </form>
  </div>
  <div id="verify-totp" style="display: none">
    <form action="/auth/verify/totp" method="POST">
      <%s! Dream.csrf_tag req %>
      <h3>Verify TOTP</h3>
      <input type="hidden" name="username" value="" />
      <input type="hidden" name="password" value="" />
      <label for="totp">TOTP</label>
      <input id="totp" type="text" name="totp" />
      <p>TOTP code generated by authenticator application.</p>
      <button type="submit">Login</button>
    </form>
  </div>
  <div id="verify-email" style="display: none">
    <form class="verify" action="/auth/verify/email" method="POST">
      <%s! Dream.csrf_tag req %>
      <h3>Verify email OTP</h3>
      <input type="hidden" name="username" value="" />
      <input type="hidden" name="password" value="" />
      <label for="email-otp">Email OTP</label>
      <input id="email-otp" type="text" name="otp" />
      <p>Email OTP is a one time password sent to your email (no email is being
      sent in this demo app, check the terminal for an OTP printed there).</p>
      <button type="submit">Login</button>
    </form>
    <form class="resend" action="/auth/login-with-email" method="POST">
      <%s! Dream.csrf_tag req %>
      <input type="hidden" name="username" value="" />
      <input type="hidden" name="password" value="" />
      <button type="submit">Resend email OTP</button>
      <p>If you didn't get the OTP, press here to resend it.</p>
    </form>
  </div>
  <div id="register">
    <form action="/auth/register" method="POST">
      <%s! Dream.csrf_tag req %>
      <h3>Register</h3>
      <label for="register-username">Username</label>
      <input id="register-username" type="text" name="username" />
      <label for="register-email">Email</label>
      <input id="register-email" type="text" name="email" />
      <label for="register-password">Password</label>
      <input id="register-password" type="password" name="password" />
      <label for="register-confirm-password">Confirm password</label>
      <input id="register-confirm-password" type="password" name="confirm_password" />
      <button type="submit">Register</button>
    </form>
  </div>
  <script>
    window.addEventListener('DOMContentLoaded', startAuthFlow);
  </script>

let totp_form user req =
  match user.Data.user_totp_secret_cipher with
  | None ->
    let secret = Totp.make_secret () in
    <form action="/auth/totp/enable" method="POST">
      <%s! Dream.csrf_tag req %>
      <h3>TOTP: Disabled</h4>
      <input type="hidden" name="secret" value="<%s secret %>" />
      <span class="label">
        TOTP Secret
      </span>
      <div class="qrcode">
        <%s! Totp.secret_to_svg secret
              ~appname:"Dream OCaml"
              ~username:user.Data.user_name %>
      </div>
      <p>
        Scan TOTP Secret QR code with Google Authenticator, Authy (or any other
        application for performing TOTP based authentication).
      </p>
      <label for="totp">TOTP</label>
      <input id="totp" type="text" name="totp" />
      <p>TOTP code generated by authenticator application.</p>
      <label for="password">Password</label>
      <input id="password" type="password" name="password" />
      <p>You current password to confirm it is you.</p>
      <button type="submit">Enable TOTP</button>
    </form>
  | Some _ ->
    <form action="/auth/totp/disable" method="POST">
      <%s! Dream.csrf_tag req %>
      <h3>TOTP: Enabled</h4>
      <label for="totp">TOTP</label>
      <input id="totp" type="text" name="totp" />
      <p>TOTP code generated by authenticator application.</p>
      <label for="password">Password</label>
      <input id="password" type="password" name="password" />
      <p>You current password to confirm it is you.</p>
      <button type="submit">Disable TOTP</button>
    </form>

let content_authenticated user req =
  <div>
    <h3>Welcome, <%s user.Data.user_name %>!</h3>
    <form action="/auth/logout" method="POST">
      <%s! Dream.csrf_tag req %>
      <button type="submit">Logout</button>
    </form>
    <%s! totp_form user req %>
  </div>

let main req =
  let%lwt content =
    match%lwt Auth.user req with
    | None -> Lwt.return (content_anonymous req)
    | Some user -> Lwt.return (content_authenticated user req)
  in
  Dream.respond (chrome req content)
